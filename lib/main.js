// Generated by CoffeeScript 2.5.1
(function() {
  //###########################################################################################################
  var CND, badge, debug, parallel_limit, rpr;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'ASYNC-MINIMAL';

  debug = CND.get_logger('debug', badge);

  //...........................................................................................................
  // { step, }                 = require 'coffeenode-suspend'
  //...........................................................................................................
  // require '../interim/node_modules/async.util.ensureasync'
  // require '../interim/node_modules/async.util.noop'
  // require '../interim/node_modules/async.util.onlyonce'
  // require '../interim/node_modules/async.util.restparam'
  // require '../interim/node_modules/async.util.setimmediate'
  this.forever = require('../interim/node_modules/async.forever');

  parallel_limit = require('../interim/node_modules/run-parallel-limit');

  //-----------------------------------------------------------------------------------------------------------
  this.series = function(tasks, handler) {
    return this.parallel(tasks, 1, handler);
  };

  //-----------------------------------------------------------------------------------------------------------
  this.parallel = function(tasks, limit, handler) {
    var arity;
    switch (arity = arguments.length) {
      case 2:
        [limit, handler] = [2e308, limit];
        break;
      case 3:
        null;
        break;
      default:
        throw new Error(`expected 2 or 3 arguments, got ${arity}`);
    }
    //.........................................................................................................
    return parallel_limit(tasks, limit, handler);
  };

}).call(this);

//# sourceMappingURL=main.js.map
