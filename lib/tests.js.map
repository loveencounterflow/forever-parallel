{
  "version": 3,
  "file": "tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'FOREVER-PARALLEL'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n{ forever, parallel, }    = require '..'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 3000\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@[ \"forever (1)\" ] = ( T, done ) ->\n  #.........................................................................................................\n  after = ( t, handler ) ->\n    whisper \"sleeping for #{t} seconds\"\n    setTimeout handler, t * 1000\n  #.........................................................................................................\n  get_context = ( handler ) ->\n    count = 10\n    #.......................................................................................................\n    task = ( next ) ->\n      count += -1\n      help count\n      after 0.25, ( error ) ->\n        if count > 0\n          return next()\n        warn 'over'\n        handler()\n    #.......................................................................................................\n    forever task\n    return null\n  #.........................................................................................................\n  get_context ( error, result ) ->\n    warn error if error?\n    help rpr result\n    done()\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"forever (1)\"\n    ]\n  @_prune()\n  @_main()\n\n  # CND.run => @_main()\n  # CND.run => @[ \"spawn reports errors, doesn't throw (1)\" ]()\n  # CND.run => @[ \"spawn reports errors, doesn't throw (2)\" ]()\n\n  # debug '5562', JSON.stringify key for key in Object.keys @\n\n  # @[ \"(v4) $select (demo)\" ] null, -> warn \"not tested\"\n\n"
  ]
}